
GO

CREATE TABLE StoneMaterial
(
  StoneMaterialID INT NOT NULL IDENTITY(1,1),
  Name VARCHAR(50) NOT NULL,
  Description VARCHAR(200) NOT NULL,
  PRIMARY KEY (StoneMaterialID)
);
CREATE TABLE City
(
  CityID INT NOT NULL IDENTITY(1,1),
  Zipcode VARCHAR(20) NOT NULL,
  CityName VARCHAR(50) NOT NULL,
  Country VARCHAR(50) NOT NULL,
  PRIMARY KEY (CityID)
);


CREATE TABLE Person
(
  PersonID INT NOT NULL IDENTITY(1,1),
  Name VARCHAR(100) NOT NULL,
  Address VARCHAR(100) NOT NULL,
  PhoneNumber VARCHAR(20) NOT NULL,
  Email VARCHAR(100) NOT NULL,
  DateOfBirth DATE,
  Age INT,
  Description VARCHAR(200),
  Note VARCHAR(200),
  PersonType VARCHAR(50) NOT NULL,
  CityID INT NOT NULL,
  PRIMARY KEY (PersonID),
  FOREIGN KEY (CityID) REFERENCES City(CityID)
);

CREATE TABLE Customer
(
  Discount INT NOT NULL,
  IsPremium bit NOT NULL,
  IsCompany bit NOT NULL,
  TotalSpends INT NOT NULL,
  OrdersCount INT NOT NULL,
  CustomerID INT NOT NULL,
  PRIMARY KEY (CustomerID),
  FOREIGN KEY (CustomerID) REFERENCES Person(PersonID) ON DELETE CASCADE
);


CREATE TABLE Supplier
(
  SupplierID INT NOT NULL,
  PRIMARY KEY (SupplierID),
  FOREIGN KEY (SupplierID) REFERENCES Person(PersonID) ON DELETE CASCADE
);


CREATE TABLE StoneType
(
  StoneTypeID INT NOT NULL IDENTITY(1,1),
  Name VARCHAR(50) NOT NULL,
  Description VARCHAR(200),
  Picture VARCHAR(100),
  StoneMaterialID INT NOT NULL,
  SupplierID INT NOT NULL,
  PRIMARY KEY (StoneTypeID),
  FOREIGN KEY (StoneMaterialID) REFERENCES StoneMaterial(StoneMaterialID) ON DELETE CASCADE,
  FOREIGN KEY (SupplierID) REFERENCES Supplier(SupplierID)
);


CREATE TABLE StoreLocation
(
  LocationID INT NOT NULL IDENTITY(1,1),
  LocationName VARCHAR(50) NOT NULL,
  Address VARCHAR(100) NOT NULL,
  CityID INT NOT NULL,
  PRIMARY KEY (LocationID),
  FOREIGN KEY (CityID) REFERENCES City(CityID)
);

CREATE TABLE Employee
(
  Position VARCHAR(200) NOT NULL,
  Salary INT NOT NULL,
  StartDate DATE NOT NULL,
  EmployeeID INT NOT NULL,
  LocationID INT NOT NULL,
  PRIMARY KEY (EmployeeID),
  FOREIGN KEY (EmployeeID) REFERENCES Person(PersonID) ON DELETE CASCADE,
  FOREIGN KEY (LocationID) REFERENCES StoreLocation(LocationID)
);

CREATE TABLE Login
(
  Username VARCHAR(50) NOT NULL,
  Password VARCHAR(200) NOT NULL,
  EmployeeID INT NOT NULL,
  PRIMARY KEY (EmployeeID),
  FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID)
);

CREATE TABLE OrderInfo
(
  OrderID INT NOT NULL IDENTITY(1,1),
  LocationID INT NOT NULL,
  DeliveryStatus INT NOT NULL,
  DeliveryDate DATE,
  Address VARCHAR(100) NOT NULL,
  Deposit INT NOT NULL,
  IsPaid BIT NOT NULL,
  CustomerNote VARCHAR(200),
  Updates VARCHAR(200),
  CustomerID INT NOT NULL,
  CityID INT NOT NULL,
  OrderPrice INT NOT NULL,
  EmployeeID INT NOT NULL,
  PRIMARY KEY (OrderID),
  FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID),
  FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID),
  FOREIGN KEY (CityID) REFERENCES City(CityID),
  FOREIGN KEY (LocationID) REFERENCES StoreLocation(LocationID)
);

CREATE TABLE Invoice
(
  OrderID INT NOT NULL,
  PaymentDate DATE NOT NULL,
  VATratio INT NOT NULL,
  FinalPrice INT NOT NULL,
  PRIMARY KEY (OrderID),
  FOREIGN KEY (OrderID) REFERENCES OrderInfo(OrderID) ON DELETE CASCADE
);

CREATE TABLE StoneUnit
(
  StoneUnitID INT NOT NULL IDENTITY(1,1),
  Width INT NOT NULL,
  Weight INT NOT NULL,
  Description VARCHAR(200),
  Status INT NOT NULL,
  StoneType VARCHAR(50) NOT NULL,
  CreatedDate DATE NOT NULL,
  Origin VARCHAR(50) NOT NULL,
  Updates VARCHAR(2000),
  StoneTypeID INT NOT NULL,
  LocationID INT NOT NULL,
  SupplierID INT NOT NULL,
  EmployeeID INT NOT NULL,
  PRIMARY KEY (StoneUnitID),
  FOREIGN KEY (StoneTypeID) REFERENCES StoneType(StoneTypeID),
  FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID),
  FOREIGN KEY (SupplierID) REFERENCES Supplier(SupplierID),
  FOREIGN KEY (LocationID) REFERENCES StoreLocation(LocationID)
);

CREATE TABLE Stone
(
  TotalSize INT NOT NULL,
  StoneID INT NOT NULL,
  PRIMARY KEY (StoneID),
  FOREIGN KEY (StoneID) REFERENCES StoneUnit(StoneUnitID) ON DELETE CASCADE
);

CREATE TABLE Remains
(
  Pieces INT NOT NULL,
  RemainsID INT NOT NULL,
  PRIMARY KEY (RemainsID),
  FOREIGN KEY (RemainsID) REFERENCES StoneUnit(StoneUnitID) ON DELETE CASCADE
);

CREATE TABLE StoneProduct
(
  Price INT NOT NULL,
  StoneID INT NOT NULL,
  OrderID INT NOT NULL,
  PRIMARY KEY (StoneID),
  FOREIGN KEY (StoneID) REFERENCES Stone(StoneID) ON DELETE CASCADE,
  FOREIGN KEY (OrderID) REFERENCES OrderInfo(OrderID)
);

CREATE TABLE StoneCuttable
(
  StoneID INT NOT NULL,
  StoneUnitID INT NOT NULL,
  PRIMARY KEY (StoneID, StoneUnitID),
  FOREIGN KEY (StoneID) REFERENCES Stone(StoneID) ON DELETE CASCADE,
  FOREIGN KEY (StoneUnitID) REFERENCES StoneUnit(StoneUnitID)
);

CREATE TABLE Shape
(
  Name VARCHAR(50) NOT NULL,
  ShapeType VARCHAR(50) NOT NULL,
  ShapeID INT NOT NULL,
  PRIMARY KEY (ShapeID),
  FOREIGN KEY (ShapeID) REFERENCES Stone(StoneID) ON DELETE CASCADE
);

CREATE TABLE CircleShape
(
  Diamater INT NOT NULL,
  ShapeID INT NOT NULL,
  PRIMARY KEY (ShapeID),
  FOREIGN KEY (ShapeID) REFERENCES Shape(ShapeID) ON DELETE CASCADE
);

CREATE TABLE ElipseShape
(
  DiamaterX INT NOT NULL,
  DiamaterY INT NOT NULL,
  ShapeID INT NOT NULL,
  PRIMARY KEY (ShapeID),
  FOREIGN KEY (ShapeID) REFERENCES Shape(ShapeID) ON DELETE CASCADE
);

CREATE TABLE OtherShape
(
  ShapeID INT NOT NULL,
  PRIMARY KEY (ShapeID),
  FOREIGN KEY (ShapeID) REFERENCES Shape(ShapeID) ON DELETE CASCADE
);

CREATE TABLE ShapePoint
(
  OrderIndex INT NOT NULL,
  X INT NOT NULL,
  Y INT NOT NULL,
  ShapeID INT NOT NULL,
  PRIMARY KEY (X, Y, ShapeID),
  FOREIGN KEY (ShapeID) REFERENCES OtherShape(ShapeID) ON DELETE CASCADE
);